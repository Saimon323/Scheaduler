//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SchedulerModel", "FK_Coments_Tasks", "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Scheduler.Model.EntityModels.Task), "Comments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Scheduler.Model.EntityModels.Comment), true)]
[assembly: EdmRelationshipAttribute("SchedulerModel", "FK_Coments_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Scheduler.Model.EntityModels.User), "Comments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Scheduler.Model.EntityModels.Comment), true)]
[assembly: EdmRelationshipAttribute("SchedulerModel", "FK_Documents_Projects", "Projects", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Scheduler.Model.EntityModels.Project), "Documents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Scheduler.Model.EntityModels.Document), true)]
[assembly: EdmRelationshipAttribute("SchedulerModel", "FK_Documents_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Scheduler.Model.EntityModels.User), "Documents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Scheduler.Model.EntityModels.Document), true)]
[assembly: EdmRelationshipAttribute("SchedulerModel", "FK_Groups_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Scheduler.Model.EntityModels.User), "Groups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Scheduler.Model.EntityModels.Group), true)]
[assembly: EdmRelationshipAttribute("SchedulerModel", "FK_ProjectsToGroupsRealizations_Groups", "Groups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Scheduler.Model.EntityModels.Group), "ProjectsToGroupsRealizations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Scheduler.Model.EntityModels.ProjectsToGroupsRealization), true)]
[assembly: EdmRelationshipAttribute("SchedulerModel", "FK_Users_Groups", "Groups", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Scheduler.Model.EntityModels.Group), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Scheduler.Model.EntityModels.User), true)]
[assembly: EdmRelationshipAttribute("SchedulerModel", "FK_Messages_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Scheduler.Model.EntityModels.User), "Messages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Scheduler.Model.EntityModels.Message), true)]
[assembly: EdmRelationshipAttribute("SchedulerModel", "FK_Messages_Users1", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Scheduler.Model.EntityModels.User), "Messages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Scheduler.Model.EntityModels.Message), true)]
[assembly: EdmRelationshipAttribute("SchedulerModel", "FK_Projects_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Scheduler.Model.EntityModels.User), "Projects", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Scheduler.Model.EntityModels.Project), true)]
[assembly: EdmRelationshipAttribute("SchedulerModel", "FK_ProjectsToGroupsRealizations_Projects", "Projects", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Scheduler.Model.EntityModels.Project), "ProjectsToGroupsRealizations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Scheduler.Model.EntityModels.ProjectsToGroupsRealization), true)]
[assembly: EdmRelationshipAttribute("SchedulerModel", "FK_Tasks_Projects", "Projects", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Scheduler.Model.EntityModels.Project), "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Scheduler.Model.EntityModels.Task), true)]
[assembly: EdmRelationshipAttribute("SchedulerModel", "FK_Users_Roles", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Scheduler.Model.EntityModels.Role), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Scheduler.Model.EntityModels.User), true)]
[assembly: EdmRelationshipAttribute("SchedulerModel", "FK_Tasks_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Scheduler.Model.EntityModels.User), "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Scheduler.Model.EntityModels.Task), true)]
[assembly: EdmRelationshipAttribute("SchedulerModel", "FK_Tasks_Groups", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Scheduler.Model.EntityModels.Group), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Scheduler.Model.EntityModels.Task), true)]

#endregion

namespace Scheduler.Model.EntityModels
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SchedulerEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SchedulerEntities object using the connection string found in the 'SchedulerEntities' section of the application configuration file.
        /// </summary>
        public SchedulerEntities() : base("name=SchedulerEntities", "SchedulerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SchedulerEntities object.
        /// </summary>
        public SchedulerEntities(string connectionString) : base(connectionString, "SchedulerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SchedulerEntities object.
        /// </summary>
        public SchedulerEntities(EntityConnection connection) : base(connection, "SchedulerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Comment> Comments
        {
            get
            {
                if ((_Comments == null))
                {
                    _Comments = base.CreateObjectSet<Comment>("Comments");
                }
                return _Comments;
            }
        }
        private ObjectSet<Comment> _Comments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Document> Documents
        {
            get
            {
                if ((_Documents == null))
                {
                    _Documents = base.CreateObjectSet<Document>("Documents");
                }
                return _Documents;
            }
        }
        private ObjectSet<Document> _Documents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Group> Groups
        {
            get
            {
                if ((_Groups == null))
                {
                    _Groups = base.CreateObjectSet<Group>("Groups");
                }
                return _Groups;
            }
        }
        private ObjectSet<Group> _Groups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Project> Projects
        {
            get
            {
                if ((_Projects == null))
                {
                    _Projects = base.CreateObjectSet<Project>("Projects");
                }
                return _Projects;
            }
        }
        private ObjectSet<Project> _Projects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectsToGroupsRealization> ProjectsToGroupsRealizations
        {
            get
            {
                if ((_ProjectsToGroupsRealizations == null))
                {
                    _ProjectsToGroupsRealizations = base.CreateObjectSet<ProjectsToGroupsRealization>("ProjectsToGroupsRealizations");
                }
                return _ProjectsToGroupsRealizations;
            }
        }
        private ObjectSet<ProjectsToGroupsRealization> _ProjectsToGroupsRealizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Task> Tasks
        {
            get
            {
                if ((_Tasks == null))
                {
                    _Tasks = base.CreateObjectSet<Task>("Tasks");
                }
                return _Tasks;
            }
        }
        private ObjectSet<Task> _Tasks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Comments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComments(Comment comment)
        {
            base.AddObject("Comments", comment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Documents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocuments(Document document)
        {
            base.AddObject("Documents", document);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Groups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroups(Group group)
        {
            base.AddObject("Groups", group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Projects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjects(Project project)
        {
            base.AddObject("Projects", project);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectsToGroupsRealizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectsToGroupsRealizations(ProjectsToGroupsRealization projectsToGroupsRealization)
        {
            base.AddObject("ProjectsToGroupsRealizations", projectsToGroupsRealization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTasks(Task task)
        {
            base.AddObject("Tasks", task);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchedulerModel", Name="Comment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Comment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Comment object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="taskId">Initial value of the TaskId property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="authorId">Initial value of the AuthorId property.</param>
        public static Comment CreateComment(global::System.Int32 id, global::System.Int32 taskId, global::System.String text, global::System.DateTime time, global::System.Int32 authorId)
        {
            Comment comment = new Comment();
            comment.id = id;
            comment.TaskId = taskId;
            comment.Text = text;
            comment.Time = time;
            comment.AuthorId = authorId;
            return comment;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskId
        {
            get
            {
                return _TaskId;
            }
            set
            {
                OnTaskIdChanging(value);
                ReportPropertyChanging("TaskId");
                _TaskId = StructuralObject.SetValidValue(value, "TaskId");
                ReportPropertyChanged("TaskId");
                OnTaskIdChanged();
            }
        }
        private global::System.Int32 _TaskId;
        partial void OnTaskIdChanging(global::System.Int32 value);
        partial void OnTaskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false, "Text");
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value, "Time");
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuthorId
        {
            get
            {
                return _AuthorId;
            }
            set
            {
                OnAuthorIdChanging(value);
                ReportPropertyChanging("AuthorId");
                _AuthorId = StructuralObject.SetValidValue(value, "AuthorId");
                ReportPropertyChanged("AuthorId");
                OnAuthorIdChanged();
            }
        }
        private global::System.Int32 _AuthorId;
        partial void OnAuthorIdChanging(global::System.Int32 value);
        partial void OnAuthorIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_Coments_Tasks", "Tasks")]
        public Task Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("SchedulerModel.FK_Coments_Tasks", "Tasks").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("SchedulerModel.FK_Coments_Tasks", "Tasks").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("SchedulerModel.FK_Coments_Tasks", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Task>("SchedulerModel.FK_Coments_Tasks", "Tasks", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_Coments_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SchedulerModel.FK_Coments_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SchedulerModel.FK_Coments_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SchedulerModel.FK_Coments_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("SchedulerModel.FK_Coments_Users", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchedulerModel", Name="Document")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Document : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Document object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="projectId">Initial value of the ProjectId property.</param>
        /// <param name="documentName">Initial value of the DocumentName property.</param>
        /// <param name="documentContent">Initial value of the DocumentContent property.</param>
        /// <param name="authorId">Initial value of the AuthorId property.</param>
        public static Document CreateDocument(global::System.Int32 id, global::System.Int32 projectId, global::System.String documentName, global::System.String documentContent, global::System.Int32 authorId)
        {
            Document document = new Document();
            document.id = id;
            document.ProjectId = projectId;
            document.DocumentName = documentName;
            document.DocumentContent = documentContent;
            document.AuthorId = authorId;
            return document;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value, "ProjectId");
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private global::System.Int32 _ProjectId;
        partial void OnProjectIdChanging(global::System.Int32 value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentName
        {
            get
            {
                return _DocumentName;
            }
            set
            {
                OnDocumentNameChanging(value);
                ReportPropertyChanging("DocumentName");
                _DocumentName = StructuralObject.SetValidValue(value, false, "DocumentName");
                ReportPropertyChanged("DocumentName");
                OnDocumentNameChanged();
            }
        }
        private global::System.String _DocumentName;
        partial void OnDocumentNameChanging(global::System.String value);
        partial void OnDocumentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentContent
        {
            get
            {
                return _DocumentContent;
            }
            set
            {
                OnDocumentContentChanging(value);
                ReportPropertyChanging("DocumentContent");
                _DocumentContent = StructuralObject.SetValidValue(value, false, "DocumentContent");
                ReportPropertyChanged("DocumentContent");
                OnDocumentContentChanged();
            }
        }
        private global::System.String _DocumentContent;
        partial void OnDocumentContentChanging(global::System.String value);
        partial void OnDocumentContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuthorId
        {
            get
            {
                return _AuthorId;
            }
            set
            {
                OnAuthorIdChanging(value);
                ReportPropertyChanging("AuthorId");
                _AuthorId = StructuralObject.SetValidValue(value, "AuthorId");
                ReportPropertyChanged("AuthorId");
                OnAuthorIdChanged();
            }
        }
        private global::System.Int32 _AuthorId;
        partial void OnAuthorIdChanging(global::System.Int32 value);
        partial void OnAuthorIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_Documents_Projects", "Projects")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("SchedulerModel.FK_Documents_Projects", "Projects").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("SchedulerModel.FK_Documents_Projects", "Projects").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("SchedulerModel.FK_Documents_Projects", "Projects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("SchedulerModel.FK_Documents_Projects", "Projects", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_Documents_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SchedulerModel.FK_Documents_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SchedulerModel.FK_Documents_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SchedulerModel.FK_Documents_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("SchedulerModel.FK_Documents_Users", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchedulerModel", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Group object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="menagerId">Initial value of the MenagerId property.</param>
        /// <param name="groupName">Initial value of the GroupName property.</param>
        /// <param name="creationData">Initial value of the CreationData property.</param>
        public static Group CreateGroup(global::System.Int32 id, global::System.Int32 menagerId, global::System.String groupName, global::System.DateTime creationData)
        {
            Group group = new Group();
            group.id = id;
            group.MenagerId = menagerId;
            group.GroupName = groupName;
            group.CreationData = creationData;
            return group;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MenagerId
        {
            get
            {
                return _MenagerId;
            }
            set
            {
                OnMenagerIdChanging(value);
                ReportPropertyChanging("MenagerId");
                _MenagerId = StructuralObject.SetValidValue(value, "MenagerId");
                ReportPropertyChanged("MenagerId");
                OnMenagerIdChanged();
            }
        }
        private global::System.Int32 _MenagerId;
        partial void OnMenagerIdChanging(global::System.Int32 value);
        partial void OnMenagerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, false, "GroupName");
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationData
        {
            get
            {
                return _CreationData;
            }
            set
            {
                OnCreationDataChanging(value);
                ReportPropertyChanging("CreationData");
                _CreationData = StructuralObject.SetValidValue(value, "CreationData");
                ReportPropertyChanged("CreationData");
                OnCreationDataChanged();
            }
        }
        private global::System.DateTime _CreationData;
        partial void OnCreationDataChanging(global::System.DateTime value);
        partial void OnCreationDataChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_Groups_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SchedulerModel.FK_Groups_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SchedulerModel.FK_Groups_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SchedulerModel.FK_Groups_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("SchedulerModel.FK_Groups_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_ProjectsToGroupsRealizations_Groups", "ProjectsToGroupsRealizations")]
        public EntityCollection<ProjectsToGroupsRealization> ProjectsToGroupsRealizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectsToGroupsRealization>("SchedulerModel.FK_ProjectsToGroupsRealizations_Groups", "ProjectsToGroupsRealizations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectsToGroupsRealization>("SchedulerModel.FK_ProjectsToGroupsRealizations_Groups", "ProjectsToGroupsRealizations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_Users_Groups", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("SchedulerModel.FK_Users_Groups", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("SchedulerModel.FK_Users_Groups", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_Tasks_Groups", "Task")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("SchedulerModel.FK_Tasks_Groups", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("SchedulerModel.FK_Tasks_Groups", "Task", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchedulerModel", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="toUserId">Initial value of the ToUserId property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="fromUserId">Initial value of the FromUserId property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Message CreateMessage(global::System.Int32 id, global::System.Int32 toUserId, global::System.DateTime time, global::System.String title, global::System.String text, global::System.Int32 fromUserId, global::System.Boolean status)
        {
            Message message = new Message();
            message.id = id;
            message.ToUserId = toUserId;
            message.Time = time;
            message.Title = title;
            message.Text = text;
            message.FromUserId = fromUserId;
            message.Status = status;
            return message;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToUserId
        {
            get
            {
                return _ToUserId;
            }
            set
            {
                OnToUserIdChanging(value);
                ReportPropertyChanging("ToUserId");
                _ToUserId = StructuralObject.SetValidValue(value, "ToUserId");
                ReportPropertyChanged("ToUserId");
                OnToUserIdChanged();
            }
        }
        private global::System.Int32 _ToUserId;
        partial void OnToUserIdChanging(global::System.Int32 value);
        partial void OnToUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value, "Time");
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false, "Text");
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FromUserId
        {
            get
            {
                return _FromUserId;
            }
            set
            {
                OnFromUserIdChanging(value);
                ReportPropertyChanging("FromUserId");
                _FromUserId = StructuralObject.SetValidValue(value, "FromUserId");
                ReportPropertyChanged("FromUserId");
                OnFromUserIdChanged();
            }
        }
        private global::System.Int32 _FromUserId;
        partial void OnFromUserIdChanging(global::System.Int32 value);
        partial void OnFromUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Boolean _Status;
        partial void OnStatusChanging(global::System.Boolean value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_Messages_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SchedulerModel.FK_Messages_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SchedulerModel.FK_Messages_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SchedulerModel.FK_Messages_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("SchedulerModel.FK_Messages_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_Messages_Users1", "Users")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SchedulerModel.FK_Messages_Users1", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SchedulerModel.FK_Messages_Users1", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SchedulerModel.FK_Messages_Users1", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("SchedulerModel.FK_Messages_Users1", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchedulerModel", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="projectName">Initial value of the ProjectName property.</param>
        /// <param name="budget">Initial value of the Budget property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="ownerId">Initial value of the OwnerId property.</param>
        public static Project CreateProject(global::System.Int32 id, global::System.String projectName, global::System.Double budget, global::System.DateTime startTime, global::System.Int32 ownerId)
        {
            Project project = new Project();
            project.id = id;
            project.ProjectName = projectName;
            project.Budget = budget;
            project.StartTime = startTime;
            project.OwnerId = ownerId;
            return project;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                OnProjectNameChanging(value);
                ReportPropertyChanging("ProjectName");
                _ProjectName = StructuralObject.SetValidValue(value, false, "ProjectName");
                ReportPropertyChanged("ProjectName");
                OnProjectNameChanged();
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Budget
        {
            get
            {
                return _Budget;
            }
            set
            {
                OnBudgetChanging(value);
                ReportPropertyChanging("Budget");
                _Budget = StructuralObject.SetValidValue(value, "Budget");
                ReportPropertyChanged("Budget");
                OnBudgetChanged();
            }
        }
        private global::System.Double _Budget;
        partial void OnBudgetChanging(global::System.Double value);
        partial void OnBudgetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value, "StartTime");
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StopTime
        {
            get
            {
                return _StopTime;
            }
            set
            {
                OnStopTimeChanging(value);
                ReportPropertyChanging("StopTime");
                _StopTime = StructuralObject.SetValidValue(value, "StopTime");
                ReportPropertyChanged("StopTime");
                OnStopTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _StopTime;
        partial void OnStopTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnStopTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OwnerId
        {
            get
            {
                return _OwnerId;
            }
            set
            {
                OnOwnerIdChanging(value);
                ReportPropertyChanging("OwnerId");
                _OwnerId = StructuralObject.SetValidValue(value, "OwnerId");
                ReportPropertyChanged("OwnerId");
                OnOwnerIdChanged();
            }
        }
        private global::System.Int32 _OwnerId;
        partial void OnOwnerIdChanging(global::System.Int32 value);
        partial void OnOwnerIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_Documents_Projects", "Documents")]
        public EntityCollection<Document> Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("SchedulerModel.FK_Documents_Projects", "Documents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("SchedulerModel.FK_Documents_Projects", "Documents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_Projects_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SchedulerModel.FK_Projects_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SchedulerModel.FK_Projects_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SchedulerModel.FK_Projects_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("SchedulerModel.FK_Projects_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_ProjectsToGroupsRealizations_Projects", "ProjectsToGroupsRealizations")]
        public EntityCollection<ProjectsToGroupsRealization> ProjectsToGroupsRealizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectsToGroupsRealization>("SchedulerModel.FK_ProjectsToGroupsRealizations_Projects", "ProjectsToGroupsRealizations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectsToGroupsRealization>("SchedulerModel.FK_ProjectsToGroupsRealizations_Projects", "ProjectsToGroupsRealizations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_Tasks_Projects", "Tasks")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("SchedulerModel.FK_Tasks_Projects", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("SchedulerModel.FK_Tasks_Projects", "Tasks", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchedulerModel", Name="ProjectsToGroupsRealization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectsToGroupsRealization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectsToGroupsRealization object.
        /// </summary>
        /// <param name="projectId">Initial value of the ProjectId property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        /// <param name="id">Initial value of the id property.</param>
        public static ProjectsToGroupsRealization CreateProjectsToGroupsRealization(global::System.Int32 projectId, global::System.Int32 groupId, global::System.Int32 id)
        {
            ProjectsToGroupsRealization projectsToGroupsRealization = new ProjectsToGroupsRealization();
            projectsToGroupsRealization.ProjectId = projectId;
            projectsToGroupsRealization.GroupId = groupId;
            projectsToGroupsRealization.id = id;
            return projectsToGroupsRealization;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value, "ProjectId");
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private global::System.Int32 _ProjectId;
        partial void OnProjectIdChanging(global::System.Int32 value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value, "GroupId");
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.Int32 _GroupId;
        partial void OnGroupIdChanging(global::System.Int32 value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_ProjectsToGroupsRealizations_Groups", "Groups")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("SchedulerModel.FK_ProjectsToGroupsRealizations_Groups", "Groups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("SchedulerModel.FK_ProjectsToGroupsRealizations_Groups", "Groups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("SchedulerModel.FK_ProjectsToGroupsRealizations_Groups", "Groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("SchedulerModel.FK_ProjectsToGroupsRealizations_Groups", "Groups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_ProjectsToGroupsRealizations_Projects", "Projects")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("SchedulerModel.FK_ProjectsToGroupsRealizations_Projects", "Projects").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("SchedulerModel.FK_ProjectsToGroupsRealizations_Projects", "Projects").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("SchedulerModel.FK_ProjectsToGroupsRealizations_Projects", "Projects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("SchedulerModel.FK_ProjectsToGroupsRealizations_Projects", "Projects", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchedulerModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Role CreateRole(global::System.Int32 id, global::System.String name)
        {
            Role role = new Role();
            role.id = id;
            role.Name = name;
            return role;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_Users_Roles", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("SchedulerModel.FK_Users_Roles", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("SchedulerModel.FK_Users_Roles", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchedulerModel", Name="Task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Task : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Task object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="taskName">Initial value of the TaskName property.</param>
        /// <param name="hours">Initial value of the Hours property.</param>
        /// <param name="projectId">Initial value of the ProjectId property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        public static Task CreateTask(global::System.Int32 id, global::System.DateTime startTime, global::System.String taskName, global::System.Int32 hours, global::System.Int32 projectId, global::System.Int32 groupId)
        {
            Task task = new Task();
            task.id = id;
            task.StartTime = startTime;
            task.TaskName = taskName;
            task.Hours = hours;
            task.ProjectId = projectId;
            task.GroupId = groupId;
            return task;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WorkerId
        {
            get
            {
                return _WorkerId;
            }
            set
            {
                OnWorkerIdChanging(value);
                ReportPropertyChanging("WorkerId");
                _WorkerId = StructuralObject.SetValidValue(value, "WorkerId");
                ReportPropertyChanged("WorkerId");
                OnWorkerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _WorkerId;
        partial void OnWorkerIdChanging(Nullable<global::System.Int32> value);
        partial void OnWorkerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value, "StartTime");
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StopTime
        {
            get
            {
                return _StopTime;
            }
            set
            {
                OnStopTimeChanging(value);
                ReportPropertyChanging("StopTime");
                _StopTime = StructuralObject.SetValidValue(value, "StopTime");
                ReportPropertyChanged("StopTime");
                OnStopTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _StopTime;
        partial void OnStopTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnStopTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TaskName
        {
            get
            {
                return _TaskName;
            }
            set
            {
                OnTaskNameChanging(value);
                ReportPropertyChanging("TaskName");
                _TaskName = StructuralObject.SetValidValue(value, false, "TaskName");
                ReportPropertyChanged("TaskName");
                OnTaskNameChanged();
            }
        }
        private global::System.String _TaskName;
        partial void OnTaskNameChanging(global::System.String value);
        partial void OnTaskNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Hours
        {
            get
            {
                return _Hours;
            }
            set
            {
                OnHoursChanging(value);
                ReportPropertyChanging("Hours");
                _Hours = StructuralObject.SetValidValue(value, "Hours");
                ReportPropertyChanged("Hours");
                OnHoursChanged();
            }
        }
        private global::System.Int32 _Hours;
        partial void OnHoursChanging(global::System.Int32 value);
        partial void OnHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value, "ProjectId");
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private global::System.Int32 _ProjectId;
        partial void OnProjectIdChanging(global::System.Int32 value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value, "GroupId");
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.Int32 _GroupId;
        partial void OnGroupIdChanging(global::System.Int32 value);
        partial void OnGroupIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_Coments_Tasks", "Comments")]
        public EntityCollection<Comment> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comment>("SchedulerModel.FK_Coments_Tasks", "Comments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comment>("SchedulerModel.FK_Coments_Tasks", "Comments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_Tasks_Projects", "Projects")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("SchedulerModel.FK_Tasks_Projects", "Projects").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("SchedulerModel.FK_Tasks_Projects", "Projects").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("SchedulerModel.FK_Tasks_Projects", "Projects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("SchedulerModel.FK_Tasks_Projects", "Projects", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_Tasks_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SchedulerModel.FK_Tasks_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SchedulerModel.FK_Tasks_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SchedulerModel.FK_Tasks_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("SchedulerModel.FK_Tasks_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_Tasks_Groups", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("SchedulerModel.FK_Tasks_Groups", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("SchedulerModel.FK_Tasks_Groups", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("SchedulerModel.FK_Tasks_Groups", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("SchedulerModel.FK_Tasks_Groups", "Group", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchedulerModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="surname">Initial value of the Surname property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String name, global::System.String surname, global::System.String login, global::System.String password, global::System.Int32 roleId)
        {
            User user = new User();
            user.id = id;
            user.Name = name;
            user.Surname = surname;
            user.Login = login;
            user.Password = password;
            user.RoleId = roleId;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, false, "Surname");
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false, "Login");
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value, "RoleId");
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value, "GroupId");
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupId;
        partial void OnGroupIdChanging(Nullable<global::System.Int32> value);
        partial void OnGroupIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_Coments_Users", "Comments")]
        public EntityCollection<Comment> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comment>("SchedulerModel.FK_Coments_Users", "Comments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comment>("SchedulerModel.FK_Coments_Users", "Comments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_Documents_Users", "Documents")]
        public EntityCollection<Document> Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("SchedulerModel.FK_Documents_Users", "Documents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("SchedulerModel.FK_Documents_Users", "Documents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_Groups_Users", "Groups")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("SchedulerModel.FK_Groups_Users", "Groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("SchedulerModel.FK_Groups_Users", "Groups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_Users_Groups", "Groups")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("SchedulerModel.FK_Users_Groups", "Groups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("SchedulerModel.FK_Users_Groups", "Groups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("SchedulerModel.FK_Users_Groups", "Groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("SchedulerModel.FK_Users_Groups", "Groups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_Messages_Users", "Messages")]
        public EntityCollection<Message> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("SchedulerModel.FK_Messages_Users", "Messages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("SchedulerModel.FK_Messages_Users", "Messages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_Messages_Users1", "Messages")]
        public EntityCollection<Message> Messages1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("SchedulerModel.FK_Messages_Users1", "Messages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("SchedulerModel.FK_Messages_Users1", "Messages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_Projects_Users", "Projects")]
        public EntityCollection<Project> Projects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("SchedulerModel.FK_Projects_Users", "Projects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("SchedulerModel.FK_Projects_Users", "Projects", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_Users_Roles", "Roles")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("SchedulerModel.FK_Users_Roles", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("SchedulerModel.FK_Users_Roles", "Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("SchedulerModel.FK_Users_Roles", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("SchedulerModel.FK_Users_Roles", "Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModel", "FK_Tasks_Users", "Tasks")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("SchedulerModel.FK_Tasks_Users", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("SchedulerModel.FK_Tasks_Users", "Tasks", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
